#!/usr/bin/bash

# check for root permission
if ! (( $(id -u) == 0 ))
then
    >&2 echo "This script requires root permission, run it with sudo!"
    exit 1
fi


# user's home directory
declare -r USER_HOME=$(getent passwd $SUDO_USER | cut -d: -f6)


# check if a program exists
function exists ()
{
    if command -v "$1" 
    then
        true
    else
        false
    fi
}


# function that ask for user confirmation
function userConfirm ()
{
    echo "Do you want to install $1? [y/n]"
    read answer

    if [[ "$answer" == 'y' || $answer == 'Y' ]]
    then
        true
    else
        false
    fi
}


function installingPrompt ()
{
    echo "Installing $1..."
}


function installationExitCode ()
{
    if (( $? == 0 ))
    then
        echo "Installation was successful!"
        echo
    else
        echo "Something went wrong during the installation :("
        echo
    fi
}



# verify that the program is not installed
# than, ask for confirmation and install it
function install ()
{
    # name of the program run in bas
    declare PROG_BASH_NAME=""

    # name of the apt package
    declare PROG_APT_NAME=""


    PROG_BASH_NAME=$1

    if (( $# == 1 ))
    then
        PROG_APT_NAME=$PROG_BASH_NAME
    else
        PROG_APT_NAME="$2"
    fi


    if ! exists $PROG_BASH_NAME
    then
        if userConfirm $PROG_BASH_NAME
        then
            installingPrompt "$PROG_BASH_NAME"
            apt install $PROG_APT_NAME -y
            installationExitCode
        fi
    fi
}


# make dir if it doesn't exists
function smkdir ()
{
    if ! [ -d "$1" ]
    then
        command mkdir -p  "$1"
    fi
}


install tree
install unzip
install nvim neovim
install neofetch

# installing plug (plugin manager for vim/neovim)
declare -r PLUG_DIR="$USER_HOME/.config/nvim/autoload"
declare -r PLUG_FILE="$PLUG_DIR/plug.vim"

if ! [ -f "$PLUG_FILE" ]
then
    if userConfirm "vim-plug"
    then
        installingPrompt "vim-plug"
        smkdir $PLUG_DIR  && \
        chown $SUDO_USER $PLUG_DIR && \
        chmod u+rwx $PLUG_DIR  && \
        curl -fLo "$PLUG_FILE" --create-dirs \
            "https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim" 
        chown $SUDO_USER $PLUG_FILE && \
        installationExitCode
    fi
fi


# installing oh my posh
if ! exists "oh-my-posh"
then
    if userConfirm "oh-my-posh"
    then
        # installing oh-my-posh
        installingPrompt "oh-my-posh"
        wget "https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/posh-linux-amd64" -O "/usr/local/bin/oh-my-posh"  && \
        chmod +x "/usr/local/bin/oh-my-posh" 
        installationExitCode

        # installing oh-my-posh themes
        installingPrompt "oh-my-posh themes"
        declare -r OMP_THEMES_DIR="$USER_HOME/.config/oh-my-posh/themes"  && \
        smkdir $OMP_THEMES_DIR  && \
        chown $SUDO_USER $OMP_THEMES_DIR  && \
        chmod u+rwx $OMP_THEMES_DIR  && \
        wget https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/themes.zip -O /tmp/themes.zip  && \
        unzip /tmp/themes.zip -d $OMP_THEMES_DIR  && \
        chown $SUDO_USER $OMP_THEMES_DIR/*.omp.*  && \
        chmod u+rw $OMP_THEMES_DIR/*.omp.*  && \
        rm /tmp/themes.zip 
        installationExitCode
        
    fi
fi 
